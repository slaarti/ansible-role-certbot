---
- name: Install certbot package(s)
  apt:
    pkg: certbot
    state: latest
    update_cache: yes
    default_release: "{{ certbot_default_release }}"

- name: Create Certbot configuration directory
  file:
    path: "{{ certbot_config_directory }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create Certbot accounts directory
  file:
    path: "{{ certbot_config_directory }}/accounts"
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Create account directory trees
  file:
    path: "{{ certbot_config_directory }}/accounts/{{ item.server|regex_replace('^https?://(.+)/?', '\\1') }}/{{ item.account_id }}"
    state: directory
    owner: root
    group: root
    mode: 0700
    recurse: yes
  with_items: "{{ certbot_account_list }}"

- name: Create account meta files
  copy:
    dest: "{{ certbot_config_directory }}/accounts/{{ item.server|regex_replace('^https?://(.+)/?', '\\1') }}/{{ item.account_id }}/meta.json"
    owner: root
    group: root
    mode: 0644
    content: "{{ item.meta }}"
  with_items: "{{ certbot_account_list }}"

- name: Create account private keys
  copy:
    dest: "{{ certbot_config_directory }}/accounts/{{ item.server|regex_replace('^https?://(.+)/?', '\\1') }}/{{ item.account_id }}/private_key.json"
    owner: root
    group: root
    mode: 0600
    content: "{{ item.privatekey }}"
  with_items: "{{ certbot_account_list }}"

- name: Create account registration files
  copy:
    dest: "{{ certbot_config_directory }}/accounts/{{ item.server|regex_replace('^https?://(.+)/?', '\\1') }}/{{ item.account_id }}/regr.json"
    owner: root
    group: root
    mode: 0644
    content: "{{ item.regr }}"
  with_items: "{{ certbot_account_list }}"

- name: Ask certbot for its version
  command: /usr/bin/certbot --version
  register: certbot_vcommand

- name: Set fact for certbot version number
  set_fact:
    certbot_version: "{{ certbot_vcommand.stderr | replace('certbot ', '') | trim }}"

- name: Do standalone registration to get initial certs
  command: /usr/bin/certbot certonly --standalone -t --agree-tos --server "{{ item.0.server }}" --email "{{ item.0.email }}" --domain "{{ item.1.name }}"
  args:
    creates: "{{ certbot_config_directory }}/live/{{ item.1.name }}/fullchain.pem"
  with_subelements:
    - "{{ certbot_account_list }}"
    - domains

- name: Rewrite certificate renewal configuration.
  template:
    src: renewal.conf.j2
    dest: "{{ certbot_config_directory }}/renewal/{{ item.1.name }}.conf"
    owner: root
    group: root
    mode: 0755
  with_subelements:
    - "{{ certbot_account_list }}"
    - domains

- name: Remove certbot crontab from package
  file:
    path: "/etc/cron.d/certbot"
    state: absent

- name: Disable sending mail for certbot cron job
  cron:
    name: "MAILTO"
    env: yes
    value: ""
    user: root
    cron_file: "certbot-nginx"

- name: Add certbot cron job that also restarts nginx
  cron:
    name: "certbot renewal"
    job: "/usr/bin/test -x /usr/bin/certbot && /usr/bin/perl -e 'sleep int(rand(3600))' && /usr/bin/certbot -q renew && /etc/init.d/nginx reload"
    user: root
    minute: "0"
    hour: "*/12"
    cron_file: "certbot-nginx"

